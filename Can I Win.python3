class Solution:
    def canIWin(self, maxChoosableInteger: int, desiredTotal: int) -> bool:
        if desiredTotal <= 0:
            return True
        if (maxChoosableInteger * (maxChoosableInteger + 1)) // 2 < desiredTotal:
            return False

        memo = {}
        
        def can_win(used, total):
            if used in memo:
                return memo[used]
            for i in range(1, maxChoosableInteger + 1):
                curr = 1 << (i - 1)
                if not (used & curr):
                    if i >= total or not can_win(used | curr, total - i):
                        memo[used] = True
                        return True
            memo[used] = False
            return False
        
        return can_win(0, desiredTotal)
