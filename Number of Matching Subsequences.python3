class Solution:
    def numMatchingSubseq(self, s: str, words: List[str]) -> int:
        from collections import defaultdict, deque

        waiting = defaultdict(deque)
        for word in words:
            waiting[word[0]].append(iter(word[1:]))

        count = 0
        for c in s:
            queue = waiting[c]
            for _ in range(len(queue)):
                it = queue.popleft()
                nxt = next(it, None)
                if nxt:
                    waiting[nxt].append(it)
                else:
                    count += 1
        return count
