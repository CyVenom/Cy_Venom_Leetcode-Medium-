from collections import deque

class Solution:
    def minMutation(self, startGene: str, endGene: str, bank: List[str]) -> int:
        bank_set = set(bank)
        if endGene not in bank_set:
            return -1

        queue = deque([(startGene, 0)])
        genes = ['A', 'C', 'G', 'T']
        
        while queue:
            current, steps = queue.popleft()
            if current == endGene:
                return steps
            for i in range(len(current)):
                for g in genes:
                    if current[i] != g:
                        mutated = current[:i] + g + current[i+1:]
                        if mutated in bank_set:
                            queue.append((mutated, steps + 1))
                            bank_set.remove(mutated)
        
        return -1
